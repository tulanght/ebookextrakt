# file-path: src/extract_app/core/epub_parser.py
# version: 2.7
# last-updated: 2025-09-18
# description: T√°i c·∫•u tr√∫c l·ªõn, gom nh√≥m n·ªôi dung theo file ngu·ªìn (href) ƒë·ªÉ s·ª≠a l·ªói crash.

from ebooklib import epub
from bs4 import BeautifulSoup
from typing import List, Dict, Any
from pathlib import Path
from collections import OrderedDict

def _get_unique_chapters_from_toc(book, toc_items, unique_chapters):
    """
    H√†m ƒë·ªá quy ƒë·ªÉ l·∫•y ra m·ªôt danh s√°ch duy nh·∫•t c√°c ch∆∞∆°ng (href) v√† ti√™u ƒë·ªÅ ch√≠nh.
    """
    for item in toc_items:
        if isinstance(item, tuple):
            _get_unique_chapters_from_toc(book, item, unique_chapters)
        elif isinstance(item, epub.Link):
            href = item.href.split('#')[0]
            if href not in unique_chapters:
                unique_chapters[href] = item.title

def parse_epub(filepath: str) -> List[Dict[str, Any]]:
    temp_image_dir = Path("temp/images")
    temp_image_dir.mkdir(parents=True, exist_ok=True)
    
    try:
        book = epub.read_epub(filepath)
        structured_content = []
        
        # B∆∞·ªõc 1: T·∫°o danh s√°ch c√°c ch∆∞∆°ng duy nh·∫•t d·ª±a tr√™n href
        unique_chapters = OrderedDict()
        _get_unique_chapters_from_toc(book, book.toc, unique_chapters)

        # B∆∞·ªõc 2: Duy·ªát qua danh s√°ch ch∆∞∆°ng duy nh·∫•t ƒë√≥ ƒë·ªÉ x·ª≠ l√Ω
        for href, title in unique_chapters.items():
            print(f"üîé ƒêang x·ª≠ l√Ω file ch∆∞∆°ng: {title} (href: {href})")
            
            doc_item = book.get_item_with_href(href)
            if not doc_item: continue

            chapter_content = []
            soup = BeautifulSoup(doc_item.get_content(), 'xml')

            if soup.body:
                content_tags = soup.body.find_all(['p', 'h1', 'h2', 'h3', 'h4', 'img'])
                
                for tag in content_tags:
                    if tag.name == 'img':
                        src = tag.get('src')
                        if not src: continue
                        
                        image_item = book.get_item_with_href(src)
                        if image_item:
                            image_bytes = image_item.get_content()
                            image_ext = Path(image_item.get_name()).suffix
                            image_filename = f"epub_{Path(image_item.get_name()).stem}{image_ext}"
                            image_path = temp_image_dir / image_filename
                            with open(image_path, "wb") as f:
                                f.write(image_bytes)
                            chapter_content.append(('image', str(image_path)))
                    else:
                        text = tag.get_text(strip=True)
                        if text:
                            chapter_content.append(('text', text))
            
            if chapter_content:
                structured_content.append({'title': title, 'content': chapter_content})

        return structured_content
    except Exception as e:
        print(f"L·ªói khi x·ª≠ l√Ω file EPUB: {e}")
        return [{'title': 'L·ªói', 'content': [('text', f"L·ªói: {e}")]}]